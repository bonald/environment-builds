# Vagrant File (Vagrantfile)
# http://docs.vagrantup.com/v2/vagrantfile/index.html

# Windows guests can't even be used with Vagrant versions less than 1.3.5.
Vagrant.require_version ">= 1.3.5"
if Vagrant::VERSION < '1.6.0'
  # Vagrant versions less than 1.6.x do not have a built-in way to
  # communicate with Windows guest images.For versions less than 1.6.x
  # the vagrant-windows plugin is required.
  Vagrant.require_plugin "vagrant-windows"
end

# http://docs.vagrantup.com/v2/vagrantfile/machine_settings.html
Vagrant.configure("2") do |config|

    config.vm.define "chocowin2012" do |chocowin2012|
        #config.vm.box = "ferventcoder/win2012r2-x64-nocm"
        chocowin2012.vm.box = "devopsguys/Windows2012R2Eval"

        # http://docs.vagrantup.com/v2/providers/configuration.html
        # http://docs.vagrantup.com/v2/virtualbox/configuration.html
        chocowin2012.vm.provider :virtualbox do |v, override|
            v.gui = true
            v.memory = 4096
            v.customize ["modifyvm", :id, "--cpus", "2"]
            v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
            v.customize ["modifyvm", :id, "--vram", 32]
            v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            v.customize ["modifyvm", :id, "--audio", "none"]
            v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
            v.customize ["modifyvm", :id, "--draganddrop", "hosttoguest"]
            v.customize ["modifyvm", :id, "--usb", "off"]
            # Huge performance gain here
            v.linked_clone = true if Vagrant::VERSION >= '1.8.0'
        end

        # https://www.vagrantup.com/docs/hyperv/configuration.html
        # https://technet.microsoft.com/en-us/library/dn798297(v=ws.11).aspx
        chocowin2012.vm.provider :hyperv do |v, override|
            # 4GB RAM
            v.memory = 4096
            # 2 CPUs
            v.cpus = 2
            # The time in seconds to wait for the virtual machine to report an IP address
            v.ip_address_timeout = 130
            # Use differencing disk instead of cloning whole VHD
            v.differencing_disk = true
            v.vm_integration_services = {
            guest_service_interface: true,
            heartbeat: true,
            key_value_pair_exchange: true,
            shutdown: true,
            time_synchronization: true,
            vss: true
            }
        end

        # timeout of waiting for image to stop running - may be a deprecated setting
        chocowin2012.windows.halt_timeout = 20
        # username/password for accessing the image
        chocowin2012.winrm.username = "vagrant"
        chocowin2012.winrm.password = "vagrant"
        # explicitly tell Vagrant the guest is Windows
        chocowin2012.vm.guest = :windows
        chocowin2012.vm.communicator = "winrm"


        # Share `packages` directory as `C:\packages`
        chocowin2012.vm.synced_folder "c:\\choco-resources\\packages", "/packages"
        #chocowin2012.vm.synced_folder "temp", "/Users/vagrant/AppData/Local/Temp/chocolatey"
        # not recommended for sharing, it may have issues with `vagrant sandbox rollback`
        #chocowin2012.vm.synced_folder "chocolatey", "/ProgramData/chocolatey"

        # Port forward WinRM / RDP
        # Vagrant 1.9.3 - if you run into Errno::EADDRNOTAVAIL (https://github.com/mitchellh/vagrant/issues/8395),
        #  add host_ip: "127.0.0.1" for it to work
        chocowin2012.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true #, host_ip: "127.0.0.1"
        chocowin2012.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true #, host_ip: "127.0.0.1"
        # Port forward SSH (ssh is forwarded by default in most versions of Vagrant,
        # but be sure). This is not necessary if you are not using SSH, but it doesn't
        # hurt anything to have it
        chocowin2012.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true #, host_ip: "127.0.0.1"

        # Provisioners - http://docs.vagrantup.com/v2/provisioning/
        # In this specific vagrant usage, we are using the shell provisioner
        # http://docs.vagrantup.com/v2/provisioning/shell.html
        chocowin2012.vm.provision :shell, :path => "../scripts/ConfigureAutoLogin.ps1", privileged: false
        chocowin2012.vm.provision :shell, :path => "../scripts/PrepareWindows.ps1", privileged: false
        chocowin2012.vm.provision :shell, :path => "../scripts/InstallNet4.ps1", privileged: false
        chocowin2012.vm.provision :shell, :path => "../scripts/InstallChocolatey.ps1", privileged: false
        chocowin2012.vm.provision :shell, :path => "../scripts/NotifyGuiAppsOfEnvironmentChanges.ps1", privileged: false
        chocowin2012.vm.provision "shell", privileged: false, inline: <<-SHELL
            choco source remove -n=chocolatey
            choco source add -n=local -s="\\packages" -priority=1
            choco source add -n=chocolatey -s="https://chocolatey.org/api/v2/" -priority=2
        SHELL
        chocowin2012.vm.provision :shell, :path => "../scripts/InstallStandardApps.ps1", privileged: false

        # chocowin2012.vm.provision "shell", privileged: false, inline: <<-SHELL
        #     setx.exe trigger 1  # run arbitrary win32 application so LASTEXITCODE is 0
        #     $ErrorActionPreference = "Stop"
        #     $env:PATH +=";$($env:SystemDrive)\\ProgramData\\chocolatey\\bin"
        #     # https://github.com/chocolatey/choco/issues/512
        #     $validExitCodes = @(0, 1605, 1614, 1641, 3010)

        #     Write-Output "Testing package if a line is uncommented."
        #     # THIS IS WHAT YOU CHANGE
        #     # - uncomment one of the two and edit it appropriately
        #     # - See the README for details
        #     #choco.exe install -fdvy INSERT_NAME --version INSERT_VERSION  --allow-downgrade
        #     #choco.exe install -fdvy INSERT_NAME  --allow-downgrade --source "'c:\\packages;http://chocolatey.org/api/v2/'"

        #     $exitCode = $LASTEXITCODE

        #     Write-Host "Exit code was $exitCode"
        #     if ($validExitCodes -contains $exitCode) {
        #     Exit 0
        #     }

        #     Exit $exitCode
        # SHELL
    end
end